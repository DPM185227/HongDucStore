@model HongDucStore.Models.NhanVien

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "NhanVien", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>NhanVien</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaNhanVien)
        @Html.HiddenFor(model => model.HinhAnh)
        @Html.HiddenFor(model => model.KichHoat)

        <div class="form-group">
            @Html.LabelFor(model => model.TenNhanVien, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TenNhanVien, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenNhanVien, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CMT_CCCD, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.CMT_CCCD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CMT_CCCD, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenDangNhap, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TenDangNhap, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenDangNhap, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
            <input value="@Model.MatKhau" name="MatKhauCu" type="hidden" />
            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoaiTaiKhoan, htmlAttributes: new { @class = "control-label col-md-2" })
            <select name="LoaiTaiKhoan" class="form-control">
                <option value="0">Admin</option>
                <option value="1">Nhân viên</option>
            </select>
            @Html.ValidationMessageFor(model => model.LoaiTaiKhoan, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
            <br/>
            <img src="~/@Model.HinhAnh" width="150" />
            <input name="staffFile" type="file" class="form-control" />
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cập nhật" class="btn btn-outline-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
